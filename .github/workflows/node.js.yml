name: CLI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'
        
    - name: Install dependencies
      run: npm install
      
    - name: Lint
      run: npm run lint
      
#     - name: Formatter
#       run: npm run prettier:fix
      
    - name: Test
      env:
        CI: true
      run: npm run test
      
    - name: Build
      run: npm run build

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: "1.0.9"

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ID }}
        aws-region: ap-south-1

    - name: Initialize Terraform
      run: terraform init

    - name: Plan infrastructure changes
      run: terraform plan

    - name: Apply infrastructure changes
      run: terraform apply --auto-approve

#     - name: Deploy to S3
#       uses: jakejarvis/s3-sync-action@master
#       with:
#         args: --acl public-read --delete
#       env:
#         AWS_S3_BUCKET_DEV: ${{ secrets.AWS_S3_BUCKET_DEV }}
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_KEY_ID: ${{ secrets.AWS_SECRET_KEY_ID }}
#         SOURCE_DIR: 'dist'
#         DEST_DIR: 'dev'
#       if: github.ref == 'refs/heads/dev'

#     - name: Deploy to S3
#       uses: jakejarvis/s3-sync-action@master
#       with:
#         args: --acl public-read --delete
#       env:
#         AWS_S3_BUCKET_STAGE: ${{ secrets.AWS_S3_BUCKET_STAGE }}
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_KEY_ID: ${{ secrets.AWS_SECRET_KEY_ID }}
#         SOURCE_DIR: 'dist'
#         DEST_DIR: 'stage'
#       if: github.ref == 'refs/heads/stage'

#     - name: Deploy to S3
#       uses: jakejarvis/s3-sync-action@master
#       with:
#         args: --acl public-read --delete
#       env:
#         AWS_S3_BUCKET_PROD: ${{ secrets.AWS_S3_BUCKET_PROD }}
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_KEY_ID: ${{ secrets.AWS_SECRET_KEY_ID }}
#         SOURCE_DIR: 'dist'
#         DEST_DIR: 'prod'
#       if: github.ref == 'refs/heads/prod'
